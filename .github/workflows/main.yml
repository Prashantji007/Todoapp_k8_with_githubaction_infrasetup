name: todo_app infra workflow

on:
  pull_request:
    branches:
      - 'main'

  push:
    branches:
      - 'main'

permissions:              
  id-token: write          # required for OIDC federation
  contents: read           # to clone the repo

jobs:
  terraforminit:
    name: terraform initialization
    runs-on: raja:rana

    steps: 
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Azure Login
      uses: Azure/login@v2.3.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform Init
      id: init
      run: terraform init -input=false
      working-directory: Environments/dev
      shell: cmd
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: Environments/dev
      shell: cmd
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_USE_OIDC: true
      

  terraforminitandplan:
    name: terraform init and plan
    runs-on: raja:rana
    needs: terraforminit

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Azure Login
      uses: Azure/login@v2.3.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform Init
      id: init
      run: terraform init -input=false
      working-directory: Environments/dev
      shell: cmd
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      working-directory: Environments/dev
      shell: cmd
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        MSSQL_PASSWORD: ${{secrets.MSSQL_PASSWORD}}
        ARM_USE_OIDC: true

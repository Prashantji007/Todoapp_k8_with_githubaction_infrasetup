name: Deploy Nginx Ingress to AKS

on:
  workflow_dispatch:

permissions:
  id-token: write   # Required for OIDC
  contents: read

env:
  RESOURCE_GROUP: rg-todoapp-dev
  CLUSTER_NAME: aks-todoapp-dev01
  NAMESPACE: ingress-basic

jobs:
  deploy-ingress:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    # ðŸ”¹ 1. Azure Login (OIDC)
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # ðŸ”¹ 2. Get AKS Credentials
    - name: Get AKS Credentials
      run: |
        az aks get-credentials \
          --resource-group $RESOURCE_GROUP \
          --name $CLUSTER_NAME \
          --overwrite-existing

    # ðŸ”¹ 3. Install Helm (if not present)
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    # ðŸ”¹ 4. Create Namespace (if not exists)
    - name: Create Namespace
      run: |
        kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

    # ðŸ”¹ 5. Deploy Nginx Ingress Controller via Helm
    - name: Install Nginx Ingress
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx \
          --namespace $NAMESPACE \
          --set controller.replicaCount=1 \
          --set controller.nodeSelector."kubernetes\.io/os"=linux \
          --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
          --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
          --set controller.service.externalTrafficPolicy=Local

    # ðŸ”¹ 6. Verify Deployment
    - name: Verify Nginx Ingress
      run: |
        kubectl get pods -n $NAMESPACE
        kubectl get svc -n $NAMESPACE
